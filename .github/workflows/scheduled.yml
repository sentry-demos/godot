name: Run Demo Every 50 Minutes

on:
  schedule:
    - cron: "*/50 * * * *"
  workflow_dispatch: # allows manual runs

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  run-demo:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: godot-4.5

      - name: Unzip Godot build
        shell: bash
        run: |
          cd tools
          unzip godot.windows.template_release.x86_64.zip
          unzip godot.windows.editor.x86_64.zip
      
      - name: Cache SwiftShader
        uses: actions/cache@v4
        id: cache-swiftshader
        with:
          path: tools/vulkan-1.dll
          key: swiftshader
      
      - name: Build SwiftShader
        if: ${{ !steps.cache-swiftshader.outputs.cache-hit }}
        run: tools/build-swiftshader.ps1
      
      - name: Install sentry-cli
        if: ${{ !steps.cache-swiftshader.outputs.cache-hit }}
        run: pip install sentry-cli

      - name: Upload SwiftShader debug files
        if: ${{ !steps.cache-swiftshader.outputs.cache-hit }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        run: sentry-cli debug-files upload --include-sources tools/vulkan-1.dll tools/vulkan-1.pdb

      - name: Import project
        shell: bash
        run: ./tools/godot.windows.editor.x86_64.exe --headless --editor --import --path . || true

      - name: Run demo
        shell: bash
        run: ./tools/godot.windows.template_release.x86_64.exe --path . --automate || true
